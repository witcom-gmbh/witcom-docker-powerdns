# Default values for powerdns-pdns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: artifactory.witcom.services/powerdns/pdns
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

initImage:
  repository: artifactory.witcom.services/powerdns/pdns-gmysql-init
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}
#  my-custom-label: super

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

service:
  web:
    type: ClusterIP
    port: 8081
  udp:
    enabled: true
    type: ClusterIP
    loadBalancerIP:
    #clusterIP:
    #externalTrafficPolicy: Local
    annotations: {}
    #  metallb.universe.tf/address-pool: a-pool
    #  metallb.universe.tf/allow-shared-ip: public-dns    
  tcp:
    enabled: true
    type: ClusterIP
    #loadBalancerIP:
    #externalTrafficPolicy: Local
    annotations: {}
    #  metallb.universe.tf/address-pool: a-pool
    #  metallb.universe.tf/allow-shared-ip: public-dns    

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

pdns:
  database:
    # -- database-host for powerdns-database
    # @section -- Database configuration
    host: ""
    # -- database-name for powerdns-database
    # @section -- Database configuration
    db: ""
    # -- database-port for powerdns-database
    # @section -- Database configuration
    port: 3306
    # -- database-user for accessing powerdns-database
    # @section -- Database configuration
    user: "pdns"
    # -- database-password for accessing powerdns-database. Must be provided if `pdns.database.existingSecret` is empty
    # @section -- Database configuration
    password: ""
    # -- secret-key where `pdns.database.password` will be stored or looked up in `pdns.database.existingSecret`
    # @section -- Database configuration
    secretKey: password
    # -- Use existing for secret for the database-password
    # @section -- Database configuration
    existingSecret: ""
    backup:
      # -- Wether to enable backup-job
      # @section -- Database backup configuration
      enabled: false
      # -- Backup-Retention in days. Defaults to 30. Beware - this is set on bucket level, so please coordinate the values
      # @section -- Database backup configuration
      retention: "30"
      # -- Backup-Schedule as cron-job. Defaults to every 4 hours.
      # @section -- Database backup configuration
      schedule: "0 */4 * * *"
      # -- Labels for cron-jobs and job-instances
      # @section -- Database backup configuration
      cronJobLabels: {}
      # -- Labels for backup-pods, can be useful for Networkpolicies
      # @section -- Database backup configuration
      podLabels: {}
      # -- Resource-configuration for backup-pods
      # @section -- Database backup configuration
      resources: {}
      image:
        # -- Image repository for backup-job-pod
        # @section -- Database backup configuration
        repository: artifactory.witcom.services/cloud-backup/mysql-cloud-backup
        # -- Image pullPolicy for backup-job-pod
        # @section -- Database backup configuration
        pullPolicy: IfNotPresent
        # -- Image tag for backup-job-pod
        # @section -- Database backup configuration
        tag: "0.0.3"      
      s3:
        # -- S3-Endpoint - Required
        # @section -- Database backup configuration
        endpoint: 
        # -- S3-Bucket - Required
        # @section -- Database backup configuration        
        bucket: 
        # -- Prefix for folder in bucket. If not provided, will default to powerdns-pdns.fullname
        # @section -- Database backup configuration        
        prefix: "" 
        # -- Take S3 Secret-Access-Key and S3 Secret-Access-Key from an existing secret. Keys can be defined with `pdns.database.backup.s3.accessKeyIdSecretKey` and `pdns.database.backup.s3.secretAccessKeySecretKey`
        # @section -- Database backup configuration        
        existingSecret: 
        # -- S3 Access-Key-ID - required
        # @section -- Database backup configuration        
        accessKeyId: "" 
        # -- S3 Secret-Access-Key
        # @section -- Database backup configuration        
        secretAccessKey: ""
        # -- Key for S3-Access-Key-Id in secret `pdns.database.backup.s3.existingSecret`
        # @section -- Database backup configuration        
        accessKeyIdSecretKey: "S3_ACCESS_KEY_ID" 
        # -- Key for S3-Secret-Access-Key in secret `pdns.database.backup.s3.existingSecret`
        # @section -- Database backup configuration        
        secretAccessKeySecretKey: "S3_SECRET_ACCESS_KEY"
    init:
      # -- Initialize PowerDNS-Database with init-container
      # @section -- Database initialization
      enabled: true
      # -- Should an existing database be initialized. See https://documentation.red-gate.com/fd/baseline-on-migrate-224919695.html
      # @section -- Database initialization
      baseline: "false"
  web:
    # -- Wether to enable powerdns-web-access
    # @section -- Web-Access
    enabled: true
    # -- ACL for powerdns-web-access
    # @section -- Web-Access
    allowFrom: "0.0.0.0/0"
    api: 
      # -- Wether to enable powerdns-rest-api
      # @section -- Web-Access
      enabled: true
      # -- Create secret with provided API-Key
      # @section -- Web-Access
      apiKey: "secret"
      # -- Take api-key from existing secret 
      # @section -- Web-Access
      existingSecret: ""      
      # -- Secret-Key where api-key is available
      # @section -- Web-Access
      secretKey: apikey
  # -- Additional configuration-parameters for powerdns authorative-server. See https://doc.powerdns.com/authoritative/settings.html
  # @section -- PowerDNS Authorative configuration
  additionalConfig: []
  #  - config: default-soa-name
  #    value: a-name.example.org  

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
#  node-role.kubernetes.io/infra: ""

tolerations: []
#  - effect: NoSchedule
#    key: node-role.kubernetes.io/infra
#  - effect: PreferNoSchedule
#    key: node-role.kubernetes.io/infra

affinity: {}
#  podAntiAffinity:
#    preferredDuringSchedulingIgnoredDuringExecution:
#    - podAffinityTerm:
#        labelSelector:
#          matchExpressions:
#          - key: app.kubernetes.io/name
#            operator: In
#            values:
#            - powerdns-pdns
#          - key: app.kubernetes.io/instance
#            operator: In
#            values:
#            - SET-RELEASE-NAME-MANUALLY
#        topologyKey: kubernetes.io/hostname
#      weight: 100

## Prometheus Service Monitor
## ref: https://github.com/coreos/prometheus-operator
##
serviceMonitor:
  ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
  ##
  enabled: false
  ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
  ##
  jobLabel: ""  
  ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
  ##
  interval: 30s
  ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
  ## e.g:
  ## scrapeTimeout: 30s
  ##
  scrapeTimeout: ""
  ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  ## e.g. to clean-up the instance-name (just the ip without port)
  ## relabelings:
  ## - action: replace
  ##   regex: ([^:]+)(:[0-9]+)?
  ##   replacement: ${1}
  ##   sourceLabels:
  ##   - __address__
  ##   targetLabel: instance  
  relabelings: []
  ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  metricRelabelings: []
  ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
  ##
  honorLabels: false
  ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
  ##
  labels:
    app.kubernetes.io/monitoring-instance: playground

## Add networkpolicies
##
networkPolicy:
  # -- Enable network policies
  # @section -- Network-Policies
  enabled: false
  ## @param networkPolicy.metrics.enabled Enable network policy for metrics (prometheus)
  ## @param networkPolicy.metrics.namespaceSelector [object] Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace. If object is empty, access from all namespaces will be allowed
  ## @param networkPolicy.metrics.podSelector [object] Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
  ##
  metrics:
    # -- Enable network policy for metrics (prometheus)
    # @section -- Network-Policies
    enabled: false
    ## e.g:
    ## podSelector:
    ##   label: monitoring
    ##
    # -- Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
    # @section -- Network-Policies
    podSelector: {}
    ## e.g:
    ## namespaceSelector:
    ##   label: monitoring
    ##
    # -- Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace. If object is empty, access from all namespaces will be allowed
    # @section -- Network-Policies
    namespaceSelector: {}

  ingressRules:
    pdnsWebAccessOnlyFrom:
      # -- Enable network policy for Web-Interface
      # @section -- Network-Policies
      enabled: false

      # -- Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace. If object is empty, access from all namespaces will be allowed
      # @section -- Network-Policies
      namespaceSelector: {}

      # -- Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
      # @section -- Network-Policies
      podSelector: {}

      # -- Custom ingress-rules
      # @section -- Network-Policies
      customRules: {}    

    pdnsUdpAccessOnlyFrom:
      # -- Enable network policy for DNS-UDP
      # @section -- Network-Policies
      enabled: false

      # -- Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace. If object is empty, access from all namespaces will be allowed
      # @section -- Network-Policies
      namespaceSelector: {}

      # -- Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
      # @section -- Network-Policies
      podSelector: {}

      # -- Custom ingress-rules
      # @section -- Network-Policies
      customRules: {}    

    pdnsTcpAccessOnlyFrom:
      # -- Enable network policy for DNS-UDP
      # @section -- Network-Policies
      enabled: false

      # -- Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace. If object is empty, access from all namespaces will be allowed
      # @section -- Network-Policies
      namespaceSelector: {}

      # -- Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
      # @section -- Network-Policies
      podSelector: {}

      # -- Custom ingress-rules
      # @section -- Network-Policies
      customRules: {}    
